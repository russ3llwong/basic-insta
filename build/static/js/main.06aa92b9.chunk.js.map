{"version":3,"sources":["utils/setAuthToken.js","redux/actions/authActions.js","redux/actions/types.js","pages/Login.js","pages/SignUp.js","PrivateRoute.js","components/TopAppBar.js","redux/actions/commentActions.js","components/FeedCard.js","components/PostUploadModal.js","redux/actions/postActions.js","components/BottomAppBar.js","pages/Feed.js","pages/Profile.js","components/PostCard.js","pages/Post.js","App.js","serviceWorker.js","redux/reducers/postReducer.js","redux/reducers/commentReducer.js","redux/reducers/authReducer.js","redux/reducers/errorReducer.js","index.js","noposts.svg"],"names":["setAuthToken","token","axios","defaults","headers","common","setCurrentUser","type","payload","logoutUser","dispatch","localStorage","removeItem","document","cookie","useStyles","makeStyles","theme","root","height","image","backgroundImage","backgroundRepeat","backgroundColor","palette","grey","backgroundSize","backgroundPosition","container","display","alignItems","paper","margin","spacing","flex","avatar","secondary","main","form","width","marginTop","submit","icon","fontFamily","marginBottom","connect","state","auth","errors","loginUser","userData","post","then","res","_res$data","data","userId","concat","setItem","catch","err","response","withRouter","_ref","history","classes","_React$useState","React","useState","_React$useState2","Object","slicedToArray","userName","setUserName","_React$useState3","_React$useState4","userPassword","setUserPassword","_React$useState5","_React$useState6","userError","setUserError","_React$useState7","_React$useState8","passwordError","setPasswordError","_React$useState9","_React$useState10","userMessage","setUserMessage","_React$useState11","_React$useState12","passwordMessage","setPasswordMessage","_ref2","asyncToGenerator","regenerator_default","a","mark","_callee","e","wrap","_context","prev","next","preventDefault","username","password","md5","isAuthenticated","stop","this","_x","apply","arguments","push","react_default","createElement","Grid","component","className","CssBaseline","item","xs","sm","md","Paper","elevation","square","Typography","variant","onSubmit","noValidate","TextField","error","required","fullWidth","id","label","name","autoComplete","autoFocus","value","helperText","onChange","target","Button","color","justify","react_router_dom","to","registerUser","newUser","userEmail","setUserEmail","userFName","setUserFName","emailError","setEmailError","_React$useState13","_React$useState14","userFError","setUserFError","_React$useState15","_React$useState16","email","console","log","Component","rest","objectWithoutProperties","react_router","assign","render","props","toolbarTitle","textAlign","appBar","background","HideOnScroll","children","window","trigger","useScrollTrigger","undefined","Slide","appear","direction","in","TopAppBar","Fragment","AppBar","positio","Toolbar","backButton","Link","style","cursor","onClick","align","noWrap","onLogoutClick","addComment","postId","text","body","mainGrid","justifyContent","card","media","paddingTop","commentInput","border","outline","fontSize","inputBox","padding","comments","onClickPost","onProfileClick","comment","setComment","_id","Card","CardActionArea","CardContent","author","Divider","CardMedia","title","caption","moment","createdAt","startOf","fromNow","float","overflow","paddingRight","placeholder","DialogTitle","withStyles","closeButton","position","right","top","onClose","other","disableTypography","IconButton","aria-label","Close_default","DialogContent","MuiDialogContent","posts","newPost","uploadPost","file","formData","FormData","append","content-type","newBasicgram","close","open","_useState","_useState2","setFile","_useState3","_useState4","fileURL","setFileURL","_useState5","_useState6","setCaption","vertical","horizontal","Dialog","aria-labelledby","PostUploadModal_DialogTitle","PostUploadModal_DialogContent","dividers","Input","files","URL","createObjectURL","accept","src","multiline","DialogActions","appBarBottom","bottom","grow","flexGrow","fabButton","zIndex","left","BottomAppBar","setOpen","Container","maxWidth","edge","onFeedClick","HomeRounded_default","Fab","Add_default","components_PostUploadModal","PersonRounded_default","fetchAllPosts","get","basicgrams","useEffect","length","toConsumableArray","reverse","map","components_FeedCard","pathname","flag","transform","noposts","cookiename","cookiestring","RegExp","exec","decodeURIComponent","toString","replace","getCook","NameTitle","paddingBottom","userNameTitle","toolbarSecondary","overflowX","toolbarLink","flexShrink","fetchPostsByUserId","user","setUser","paths","location","href","split","Axios","GridList","cellHeight","cols","GridListTile","key","cardDetails","cardMedia","commentSection","overflowY","fetchCommentsByPost","Hidden","xsDown","CardActions","infoSection","List","commentPost","ListItem","ListItemText","primary","inline","inputSection","components_PostCard","webSocket","WebSocket","onmessage","message","messageObject","JSON","parse","onerror","exact","path","Login","SignUp","src_PrivateRoute","Feed","Profile","Post","Boolean","hostname","match","initialState","commentReducer","action","objectSpread","isEmpty","require","loading","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","es","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.06aa92b9.chunk.js","sourcesContent":["import axios from \"axios\";\nconst setAuthToken = token => {\n  if (token) {\n    // Apply authorization token to every request if logged in\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    // Delete auth header\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\nexport default setAuthToken; ","import axios from \"axios\";\nimport setAuthToken from \"../../utils/setAuthToken\";\n\nimport {\n  GET_ERRORS,\n  SET_CURRENT_USER,\n  USER_LOADING\n} from \"./types\";\n// Register User\nexport const registerUser = (newUser, history) => dispatch => {\n  axios\n    .post(\"/auth/create-user\", newUser)\n    .then(res => history.push(\"/login\")) // re-direct to login on successful register\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n// Login - get user token\nexport const loginUser = userData => dispatch => {\n  axios\n    .post(\"/auth/login\", userData)\n    .then(res => {\n      // if ( res.err || res.error || !res.data.valid ) { //\n      //   throw new Error(\"Error logging in\")\n      // }\n      // console.log(res)\n\n      const { token, userId } = res.data;\n      // save as cookie\n      document.cookie = `token=${token}`;\n      document.cookie = `userId=${userId}`;\n      // Save to localStorage\n      // Set token to localStorage\n      localStorage.setItem(\"token\", token);\n      localStorage.setItem(\"userId\", userId);\n      // Set token to Auth header\n      setAuthToken(token);\n      // Decode token to get user data\n      // Set current user\n      dispatch(setCurrentUser(token));\n    })\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n// Set logged in user\nexport const setCurrentUser = token => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: token\n  };\n};\n// User loading\nexport const setUserLoading = () => {\n  return {\n    type: USER_LOADING\n  };\n};\n// Log user out\nexport const logoutUser = () => dispatch => {\n  // Remove token from local storage\n  localStorage.removeItem(\"token\");\n  localStorage.removeItem(\"userId\");\n  // Remove cookies\n  document.cookie = \"userId=\";\n  document.cookie = \"token=\";\n  // Remove auth header for future requests\n  setAuthToken(false);\n  // Set current user to empty object {} which will set isAuthenticated to false\n  dispatch(setCurrentUser({}));\n};","export const GET_ERRORS = \"GET_ERRORS\";\nexport const USER_LOADING = \"USER_LOADING\";\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\nexport const FETCH_POSTS_SUCCESS = \"FETCH_POSTS_SUCCESS\";\nexport const FETCH_USER_POSTS_SUCCESS = \"FETCH_USER_POSTS_SUCCESS\";\nexport const POST_COMMENT_SUCCESS = \"POST_COMMENT_SUCCESS\";\nexport const FETCH_COMMENTS_SUCCESS = \"FETCH_COMMENTS_SUCCESS\";\nexport const ADD_COMMENT = \"ADD_COMMENT\";\nexport const POST_UPLOAD_SUCCESS = \"POST_UPLOAD_SUCCESS\";\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport PropTypes from \"prop-types\";\nimport { Link, withRouter } from 'react-router-dom'\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../redux/actions/authActions\";\nimport md5 from 'md5'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        height: '100vh',\n    },\n    image: {\n        backgroundImage: 'url(https://source.unsplash.com/random/1920x1080)',\n        backgroundRepeat: 'no-repeat',\n        backgroundColor: theme.palette.grey[50],\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n    },\n    container: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    paper: {\n        margin: theme.spacing(8, 4),\n        flex: 1,\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    icon: {\n        fontFamily: 'Abril Fatface, cursive',\n        marginBottom: theme.spacing(8)\n    }\n}));\n\nconst Login = ({ loginUser, auth, history }) => {\n    const classes = useStyles();\n    const [userName, setUserName] = React.useState(\"\");\n    const [userPassword, setUserPassword] = React.useState(\"\");\n\n    // error validator\n    const [userError, setUserError] = React.useState(false);\n    const [passwordError, setPasswordError] = React.useState(false);\n\n    // error message\n    const [userMessage, setUserMessage] = React.useState('');\n    const [passwordMessage,setPasswordMessage] = React.useState('');\n\n\n    function validate() {\n        if (userName === '')\n            setUserError(true);\n            setUserMessage('username cannot be blank');\n        if (userPassword === '')\n            setPasswordError(true);\n            setPasswordMessage('password cannot be blank');\n        return userName !== '' && userPassword !== '';\n    }\n\n    const submit = async (e) => {\n        e.preventDefault();\n        const userData = {\n            username: userName,\n            password: md5(userPassword),\n        };\n        if (validate()) {\n            loginUser(userData);\n            if (!auth.isAuthenticated) {\n                setPasswordMessage('invalid password');\n                setUserError(false);\n                setPasswordError(true);\n            }  \n        }\n   \n    }\n\n    if (auth.isAuthenticated) {\n        history.push(\"/feed\");\n    }\n\n\n    return (\n        <Grid container component=\"main\" className={classes.root}>\n            <CssBaseline />\n            <Grid item xs={false} sm={4} md={8} className={classes.image} />\n            <Grid item xs={12} sm={8} md={4} component={Paper} elevation={6} className={classes.container} square>\n                <div className={classes.paper}>\n                    <Typography component=\"h1\" variant=\"h3\" className={classes.icon}>\n                        basic.\n          </Typography>\n                    <form className={classes.form} onSubmit={submit} noValidate>\n                        <TextField\n                            error = {userError}\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"username\"\n                            label=\"Username\"\n                            name=\"username\"\n                            autoComplete=\"username\"\n                            autoFocus\n                            value={userName}\n                            helperText ={userError ? userMessage :''}\n                            onChange={e => setUserName(e.target.value)}\n                        />\n                        <TextField\n                            error = {passwordError}\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            name=\"password\"\n                            label=\"Password\"\n                            type=\"password\"\n                            id=\"password\"\n                            autoComplete=\"current-password\"\n                            value={userPassword}\n                            helperText ={passwordError ? passwordMessage :''}\n                            onChange={e => setUserPassword(e.target.value)}\n                        />\n                        <Button\n                            type=\"submit\"\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.submit}\n                        >\n                            Sign In\n            </Button>\n                        <Grid container justify=\"flex-start\">\n                            <Grid item>\n                                <Link to=\"/signup\" variant=\"body2\">\n                                    Don't have an account? <b>Sign Up</b>\n                                </Link>\n                            </Grid>\n                        </Grid>\n                    </form>\n                </div>\n            </Grid>\n        </Grid>\n    );\n}\nLogin.propTypes = {\n    loginUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n}\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n});\nexport default connect(\n    mapStateToProps,\n    { loginUser }\n)(withRouter(Login));","//material UI Stuff\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\n\n//auth and redux\nimport md5 from 'md5'\nimport PropTypes from \"prop-types\";\nimport { Link, withRouter } from 'react-router-dom'\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"../redux/actions/authActions\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        height: '100vh',\n    },\n    image: {\n        backgroundImage: 'url(https://source.unsplash.com/random/1920x1080)',\n        backgroundRepeat: 'no-repeat',\n        backgroundColor: theme.palette.grey[50],\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n    },\n    container: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    paper: {\n        margin: theme.spacing(8, 4),\n        flex: 1,\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(4),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    icon: {\n        fontFamily: 'Abril Fatface, cursive',\n        marginBottom: theme.spacing(8)\n    }\n}));\n\nconst SignUp = ({ registerUser, history, auth }) => {\n    const classes = useStyles();\n    const [userEmail, setUserEmail] = React.useState(\"\");\n    const [userName, setUserName] = React.useState(\"\");\n    const [userFName, setUserFName] = React.useState(\"\");\n    const [userPassword, setUserPassword] = React.useState(\"\");\n\n    // error validators\n    const [userError,setUserError] = React.useState(false)\n    const [emailError,setEmailError] = React.useState(false)\n    const [userFError,setUserFError] = React.useState(false)\n    const [passwordError,setPasswordError] = React.useState(false)\n    // const [errors, setErrors] = React.useState({});\n\n    function validation() {\n        userName === '' ? setUserError(true) : setUserError(false);\n        userPassword === '' ? setPasswordError(true) : setPasswordError(false);\n        userEmail === '' ? setEmailError(true) : setEmailError(false);\n        userFName === '' ? setUserFError(true) : setUserFError(false);\n        return userName !== '' && userPassword !== '' && userEmail !== '' && userFName !== '';\n    }\n\n\n    const submit = async (e) => {\n        e.preventDefault();\n        const newUser = {\n            username: userName,\n            password: md5(userPassword),\n            name: userFName,\n            email: userEmail,\n        };\n        console.log(newUser)\n        if (validation())\n            registerUser(newUser, history);\n    }\n\n    if (auth.isAuthenticated) {\n        history.push(\"/feed\");\n    }\n    return (\n        <Grid container component=\"main\" className={classes.root}>\n            <CssBaseline />\n            <Grid item xs={false} sm={4} md={8} className={classes.image} />\n            <Grid item xs={12} sm={8} md={4} component={Paper} elevation={6} className={classes.container} square>\n                <div className={classes.paper}>\n                    <Typography component=\"h1\" variant=\"h3\" className={classes.icon}>\n                        basic.\n          </Typography>\n                    <form className={classes.form} onSubmit={submit} noValidate>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12}>\n                                <TextField\n                                    error = {userFError}\n                                    autoComplete=\"fname\"\n                                    name=\"fullName\"\n                                    variant=\"outlined\"\n                                    required={true}\n                                    fullWidth\n                                    id=\"fullName\"\n                                    label=\"Full Name\"\n                                    autoFocus\n                                    value={userFName}\n                                    helperText ={userFError ? 'full name cannot be blank':''}\n                                    onChange={e => setUserFName(e.target.value)}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    error={userError}\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    id=\"userName\"\n                                    label=\"Username\"\n                                    name=\"userName\"\n                                    autoComplete=\"uname\"\n                                    value={userName}\n                                    helperText ={userError ? 'username cannot be blank':''}\n                                    onChange={e => setUserName(e.target.value)}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    error={emailError}\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    id=\"email\"\n                                    label=\"Email Address\"\n                                    name=\"email\"\n                                    autoComplete=\"email\"\n                                    value={userEmail}\n                                    helperText ={emailError ? 'email address cannot be blank':''}\n                                    onChange={e => setUserEmail(e.target.value)}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    error={passwordError}\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    name=\"password\"\n                                    label=\"Password\"\n                                    type=\"password\"\n                                    id=\"password\"\n                                    autoComplete=\"current-password\"\n                                    value={userPassword}\n                                    helperText ={passwordError ? 'password cannot be blank':''}\n                                    onChange={e => setUserPassword(e.target.value)}\n                                />\n                            </Grid>\n                        </Grid>\n                        <Button\n                            type=\"submit\"\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.submit}\n                        >\n                            Sign Up\n          </Button>\n                        <Grid container justify=\"flex-start\">\n                            <Grid item>\n                                <Link to=\"/login\" variant=\"body2\">\n                                    Already have an account? <b>Sign in</b>\n                                </Link>\n                            </Grid>\n                        </Grid>\n                    </form>\n                </div>\n            </Grid>\n        </Grid>\n    );\n}\n\nSignUp.propTypes = {\n    registerUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n});\n\nexport default connect(\n    mapStateToProps,\n    { registerUser }\n)(withRouter(SignUp));","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      auth.isAuthenticated === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\nexport default connect(mapStateToProps)(PrivateRoute); ","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\nimport Slide from '@material-ui/core/Slide';\nimport { Link } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  toolbarTitle: {\n    flex: 1,\n    textAlign: 'center',\n    fontFamily: 'Abril Fatface, cursive'\n  },\n  appBar: {\n    background: '#fff',\n    color: '#000'\n  },\n}));\n\nfunction HideOnScroll(props) {\n  const { children, window } = props;\n  const trigger = useScrollTrigger({ target: window ? window() : undefined });\n\n  return (\n    <Slide appear={false} direction=\"down\" in={!trigger}>\n      {children}\n    </Slide>\n  );\n}\n\nHideOnScroll.propTypes = {\n  children: PropTypes.element.isRequired,\n  window: PropTypes.func,\n};\n\n\n\nexport default function TopAppBar(props) {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <HideOnScroll {...props}>\n        <AppBar positio=\"static\" className={classes.appBar} elevation={0}>\n          <Toolbar>\n            {props.backButton ? (\n              <Link style={{ cursor: 'pointer' }} onClick={props.backButton}>Back</Link>\n            ) : ''\n            }\n            <Typography\n              component=\"h1\"\n              variant=\"h4\"\n              color=\"inherit\"\n              align=\"center\"\n              noWrap\n              className={classes.toolbarTitle}\n            >\n              basic\n          </Typography>\n            <Link style={{ cursor: 'pointer' }} onClick={props.onLogoutClick}>Logout</Link>\n          </Toolbar>\n        </AppBar>\n      </HideOnScroll>\n    </React.Fragment>\n  );\n} ","import axios from 'axios';\nimport {\n    FETCH_COMMENTS_SUCCESS,\n    ADD_COMMENT,\n    GET_ERRORS\n} from './types';\n\nexport const fetchCommentsByPost = (postId) => (dispatch) => {\n    return axios\n        .get(`/basicgrams/comment/post/${postId}`)\n        .then(res => {\n            console.log(res.data);\n            dispatch({\n                type: FETCH_COMMENTS_SUCCESS,\n                payload: res.data.comments,\n            });\n        })\n        .catch(err => {\n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })\n        });\n}\n\nexport const addComment = (postId, text) => (dispatch) => {\n    const body = {\n        text,\n        postId\n    }\n    return axios\n        .post(`/basicgrams/comment/new`, body)\n        .then(res => {\n            console.log('Succesfully added comment')\n        })\n        .catch(err => {\n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })\n        });\n}","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Grid, Card, CardActionArea, CardContent, CardMedia, CardActions, Divider, Link, Button } from '@material-ui/core'\nimport { addComment } from '../redux/actions/commentActions.js'\nimport moment from 'moment'\n\nconst useStyles = makeStyles(theme => ({\n  mainGrid: {\n    marginTop: theme.spacing(2),\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  card: {\n    flex: 1,\n  },\n  media: {\n    height: 0,\n    paddingTop: '100%',\n  },\n  commentInput: {\n    width: '100%',\n    border: 'none',\n    outline: 'none',\n    fontSize: '13px',\n  },\n  inputBox: {\n    padding: theme.spacing(2)\n  },\n}));\n\nconst FeedCard = ({addComment, post, onClickPost, onProfileClick }) => {\n  const classes = useStyles();\n  const [comment, setComment] = React.useState(\"\");\n\n  const submit = async (e) => {\n    e.preventDefault();\n    addComment(post._id, comment).then(() => setComment(''));\n  }\n  return (\n    <Grid item className={classes.mainGrid} xs={12} md={12}>\n      <Card className={classes.card} elevation={3}>\n        <CardActionArea>\n          <CardContent>\n            <Typography component=\"subtitle1\" variant=\"subtitle1\">\n              <Button onClick={()=>onProfileClick(post.author._id)}><b>{post.author.username}</b></Button>\n            </Typography>\n          </CardContent>\n          <Divider />\n          <CardMedia\n            className={classes.media}\n            image={post.image}\n            title=\"Image title\"\n            onClick={onClickPost}\n          />\n          <CardContent>\n            <Typography component=\"subtitle2\" variant=\"subtitle2\">\n              <b>{post.author.username}</b> {post.caption}\n            </Typography>\n            <Typography component=\"p\" variant=\"p\" color=\"textSecondary\">\n              {moment(`${post.createdAt}`).startOf('second').fromNow()}\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n        <Divider />\n        <div className={classes.inputBox}>\n          <form onSubmit={submit}>\n            <button\n              type=\"submit\"\n              style={{ float: 'right', fontSize: '13px' }}\n            >Post</button>\n            <div style={{\n              overflow: 'hidden',\n              paddingRight: '0.5em'\n            }}>\n              <input type=\"text\" placeholder=\"Add a comment\" className={classes.commentInput} value={comment} onChange={e => setComment(e.target.value)} />\n            </div>\n          </form>\n        </div>\n      </Card>\n    </Grid>\n  );\n}\n\nFeedCard.propTypes = {\n  addComment: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = state => ({\n  comments: state.comments,\n})\n\nexport default connect(\n  mapStateToProps,\n  { addComment }\n)(FeedCard);","import React, { useState } from 'react';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { withStyles } from '@material-ui/core/styles';\nimport { Input, TextField, DialogActions, Button, Snackbar } from '@material-ui/core';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport { uploadPost } from '../redux/actions/postActions'\n\nconst styles = theme => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(2),\n    },\n    closeButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500],\n    },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n    const { children, classes, onClose, ...other } = props;\n    return (\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\n            <Typography variant=\"h6\">{children}</Typography>\n            {onClose ? (\n                <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n                    <CloseIcon />\n                </IconButton>\n            ) : null}\n        </MuiDialogTitle>\n    );\n});\n\nconst DialogContent = withStyles(theme => ({\n    root: {\n        padding: theme.spacing(2),\n    },\n}))(MuiDialogContent);\n\nconst PostUploadModal = ({ uploadPost, close, open }) => {\n    const [file, setFile] = useState(null);\n    const [fileURL, setFileURL] = useState('')\n    const [caption, setCaption] = useState('');\n    const [state, setState] = React.useState({\n        vertical: 'top',\n        horizontal: 'center',\n      });\n    \n    const { vertical, horizontal } = state;\n\n    const resetFile = e => {\n        e.preventDefault();\n        setFile(null)\n        setFileURL('')\n    }\n    const onUpload = e => {\n        e.preventDefault();\n        setFile(e.target.files[0])\n        setFileURL(URL.createObjectURL(e.target.files[0]))\n    }\n    const onSubmit = (e) => {\n        e.preventDefault();\n        uploadPost(caption, file).then(() => close())\n    }\n\n    return (\n        <React.Fragment>\n            <Dialog onClose={close} aria-labelledby=\"customized-dialog-title\" open={open}>\n                <DialogTitle id=\"customized-dialog-title\" onClose={close}>\n                    New Post\n        </DialogTitle>\n                <DialogContent dividers>\n                    <div>\n                        <div style={{ display: 'inline' }}>\n                            <Input type=\"file\" onChange={onUpload} accept=\"image/*\" />\n                            {file && (\n                                <Button autoFocus color=\"primary\" style={{ float: 'right' }} onClick={resetFile}>Remove File</Button>\n                            )}\n                        </div>\n                        <img style={{ width: \"100%\" }} src={fileURL} />\n                        <TextField multiline={true} label=\"Add a caption\" style={{ width: '100%', marginTop: '20px' }} onChange={e => setCaption(e.target.value)} />\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button autoFocus onClick={onSubmit} color=\"primary\">\n                        Upload\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </React.Fragment>\n    );\n}\n\n\nPostUploadModal.propTypes = {\n    uploadPost: PropTypes.func.isRequired,\n    close: PropTypes.func.isRequired,\n    open: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    posts: state.posts,\n    newPost: state.newPost\n})\n\nexport default connect(\n    mapStateToProps,\n    { uploadPost }\n)(PostUploadModal);","import axios from \"axios\";\nimport {\n    GET_ERRORS,\n    FETCH_POSTS_SUCCESS,\n    FETCH_USER_POSTS_SUCCESS,\n    POST_UPLOAD_SUCCESS\n} from \"./types\";\n\n\nexport const uploadPost = (caption, file) => (dispatch) => {\n    let formData = new FormData();\n    formData.append('image', file);\n    formData.append('caption', caption);\n    const config = {\n        headers: {\n            'content-type': 'multipart/form-data'\n        }\n    }\n    return axios\n    .post('/basicgrams/new', formData, config)\n    .then(res => {\n      dispatch({\n        type: POST_UPLOAD_SUCCESS,\n        payload: res.newBasicgram,\n      });\n    })\n    .catch(err => {\n        dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n        })\n    });\n  }\n\nexport const fetchAllPosts = () => (dispatch) => {\n    return axios\n        .get('/basicgrams')\n        .then(res => {\n            console.log('successfully fetched posts', res.data);\n            dispatch({\n                type: FETCH_POSTS_SUCCESS,\n                payload: res.data.basicgrams,\n            })\n        })\n        .catch(err => {\n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })\n        });\n};\n\nexport const fetchPostsByUserId = (userId) => (dispatch) => {\n    return axios\n        .get(`/basicgrams/user/${userId}`)\n        .then(res => {\n            dispatch({\n                type: FETCH_USER_POSTS_SUCCESS,\n                payload: res.data.basicgrams,\n            })\n        })\n        .catch(err => {\n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })\n        });\n}","import React from 'react';\nimport { Toolbar, IconButton,  AppBar, Container, Fab } from '@material-ui/core'\nimport HomeRoundedIcon from '@material-ui/icons/HomeRounded';\nimport PersonRoundedIcon from '@material-ui/icons/PersonRounded';\nimport AddIcon from '@material-ui/icons/Add';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PostUploadModal from './PostUploadModal';\n\nconst useStyles = makeStyles(theme => ({\n    appBarBottom: {\n        background: '#fff',\n        color: '#000',\n        top: 'auto',\n        bottom: 0,\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    fabButton: {\n        position: 'absolute',\n        zIndex: 1,\n        top: -30,\n        left: 0,\n        right: 0,\n        margin: '0 auto',\n    },\n}));\n\nexport default function BottomAppBar(props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  \n  \n  return (\n    <React.Fragment>\n      <AppBar position=\"fixed\" color=\"primary\" className={classes.appBarBottom} {...props}>\n                <Container maxWidth=\"sm\">\n                    <Toolbar>\n                        <IconButton edge=\"start\" color=\"inherit\" onClick={props.onFeedClick}>\n                            <HomeRoundedIcon />\n                        </IconButton>\n                        <Fab color=\"primary\" aria-label=\"add\" className={classes.fabButton} onClick={handleClickOpen} >\n                            <AddIcon />\n                        </Fab>\n                        {open ? <PostUploadModal open={open} close={handleClose} /> : null}\n                        <div className={classes.grow} />\n                        <IconButton edge=\"end\" color=\"inherit\" onClick={props.onProfileClick}>\n                            <PersonRoundedIcon/>\n                        </IconButton>\n                    </Toolbar>\n                </Container>\n            </AppBar>\n    </React.Fragment>\n  );\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Container, Typography } from '@material-ui/core'\nimport { logoutUser } from '../redux/actions/authActions';\nimport { fetchAllPosts } from '../redux/actions/postActions';\nimport noposts from \"../noposts.svg\";\n\nimport TopAppBar from '../components/TopAppBar';\nimport FeedCard from '../components/FeedCard';\nimport BottomAppBar from \"../components/BottomAppBar\";\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        marginTop: theme.spacing(10),\n        marginBottom: theme.spacing(10),\n    },\n}));\n\n// Courtesy of stack over flow :D\nconst getCook = (cookiename) => {\n    // Get name followed by anything except a semicolon\n    let cookiestring = RegExp(\"\" + cookiename + \"[^;]+\").exec(document.cookie);\n    // Return everything after the equal sign, or an empty string if the cookie name not found\n    return decodeURIComponent(!!cookiestring ? cookiestring.toString().replace(/^[^=]+./, \"\") : \"\");\n}\n\nconst Feed = ({ logoutUser, history, fetchAllPosts, posts }) => {\n    const classes = useStyles();\n\n    React.useEffect(() => {\n        fetchAllPosts();\n    }, [fetchAllPosts]);\n\n    const onLogoutClick = e => {\n        e.preventDefault();\n        logoutUser();\n    }\n\n    const onFeedClick = () => {\n        history.push(\"/feed\")\n    }\n\n    const onProfileClick = (userId) => {\n        history.push(`/profile/${userId}`);\n    }\n\n    console.log(posts.posts)\n\n    return (\n        <React.Fragment>\n            <TopAppBar onLogoutClick={onLogoutClick} />\n            <Container className={classes.container} maxWidth=\"sm\">\n                {/* posts */}\n                <Grid container spacing={3}>\n                    {posts.posts.length > 0 ? ([...posts.posts].reverse().map(post => (\n                        <FeedCard post={post} onProfileClick={onProfileClick} onClickPost={() => history.push({\n                            pathname: `/feed/post/${post._id}`,\n                            state: { post: post, flag: 'feed' }\n                        })} />\n                    ))) : (\n                            <div\n                                style={{\n                                    position: 'absolute',\n                                    left: '50%',\n                                    top: '50%',\n                                    transform: 'translate(-50%, -50%)'\n                                }}\n                            >\n                                <img src={noposts} height=\"150px\" />\n                                <Typography\n                            component=\"h5\"\n                            variant=\"h5\"\n                            align=\"center\"\n                            noWrap\n                        >\n                            No posts available\n                </Typography>\n                    </div>)}\n                </Grid>\n                {/* End sub featured posts */}\n            </Container>\n            <BottomAppBar onProfileClick={() => onProfileClick(getCook('userId'))} onFeedClick={onFeedClick} />\n        </React.Fragment>\n    );\n}\n\nFeed.propTypes = {\n    fetchAllPosts: PropTypes.func.isRequired,\n    logoutUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    posts: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    posts: state.posts,\n});\nexport default connect(\n    mapStateToProps,\n    { logoutUser, fetchAllPosts }\n)(Feed);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport '../Profile.css'\nimport noposts from '../noposts.svg'\nimport { connect } from \"react-redux\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport withWidth, { isWidthUp } from '@material-ui/core/withWidth';\nimport TopAppBar from '../components/TopAppBar'\nimport Typography from '@material-ui/core/Typography';\nimport { fetchPostsByUserId } from '../redux/actions/postActions';\nimport Grid from '@material-ui/core/Grid';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport Container from '@material-ui/core/Container';\nimport { logoutUser } from '../redux/actions/authActions';\nimport BottomAppBar from '../components/BottomAppBar';\nimport Axios from \"axios\";\nimport { Paper, Divider } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    // toolbar: {\n    //     borderBottom: `1px solid ${theme.palette.divider}`,\n    // },\n    NameTitle: {\n        flex: 1,\n        paddingBottom: '1rem',\n        color: '#7E7E7E'\n    },\n    userNameTitle: {\n        flex: 1,\n        paddingTop: '2rem',\n        paddingBottom: '0.5rem',\n        fontFamily: 'Abril Fatface, cursive'\n    },\n    toolbarSecondary: {\n        justifyContent: 'space-between',\n        overflowX: 'auto',\n    },\n    toolbarLink: {\n        padding: theme.spacing(1),\n        flexShrink: 0,\n    },\n    mainGrid: {\n        marginTop: theme.spacing(2),\n        display: 'flex',\n        justifyContent: 'center',\n    },\n    container: {\n        marginTop: theme.spacing(10),\n        marginBottom: theme.spacing(10),\n    },\n    card: {\n        // display: 'flex',\n        flex: 1,\n    },\n    media: {\n        height: 0,\n        paddingTop: '100%',\n    },\n    appBar: {\n        background: '#fff',\n        color: '#000'\n    },\n    appBarBottom: {\n        background: '#fff',\n        color: '#000',\n        top: 'auto',\n        bottom: 0,\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    fabButton: {\n        position: 'absolute',\n        zIndex: 1,\n        top: -30,\n        left: 0,\n        right: 0,\n        margin: '0 auto',\n    },\n    commentInput: {\n        width: '100%',\n        border: 'none',\n        outline: 'none',\n        fontSize: '13px',\n    },\n    inputBox: {\n        padding: theme.spacing(2)\n    },\n}));\n\nconst Profile = ({ logoutUser, history, posts, fetchPostsByUserId, width }) => {\n\n    const classes = useStyles();\n    const [user, setUser] = React.useState('');\n\n    // Courtesy of stack over flow :D\n    const getCook = (cookiename) => {\n        // Get name followed by anything except a semicolon\n        let cookiestring = RegExp(\"\" + cookiename + \"[^;]+\").exec(document.cookie);\n        // Return everything after the equal sign, or an empty string if the cookie name not found\n        return decodeURIComponent(!!cookiestring ? cookiestring.toString().replace(/^[^=]+./, \"\") : \"\");\n    }\n\n    // 1) retrieve userId by calling the getCook function\n    // 2) axios call to retrieve username and full name\n    // 3) store them in the user state\n    // 4) fetch all the posts made by the user\n    React.useEffect(() => {\n        // const userId = getCook('userId')\n        // parse url for id\n        const paths = window.location.href.split('/');\n        const userId = paths[paths.length - 1];\n        console.log(userId);\n        Axios.get(`/user/${userId}`)\n            .then(res => { setUser(res.data.user) })\n            .catch(err => { console.log(err) })\n        fetchPostsByUserId(userId);\n    }, []);\n\n    // 1) logs out f the given account\n    const onLogoutClick = e => {\n        e.preventDefault();\n        logoutUser();\n    }\n\n    const onFeedClick = () => {\n        history.push(\"/feed\")\n    }\n\n    const onProfileClick = (userId) => {\n        history.push(`/profile/${userId}`);\n    }\n\n    return(\n        <React.Fragment>\n            {/* Essentially modified TopAppBar for profile page*/}\n            <TopAppBar onLogoutClick={onLogoutClick} />\n            <Container className={classes.container} maxWidth=\"md\">\n                <Typography\n                    component=\"h3\"\n                    variant=\"h3\"\n                    noWrap\n                    className={classes.userNameTitle}\n                >\n                    {user.username}\n                </Typography>\n                <Typography\n                    component=\"h5\"\n                    noWrap\n                    className={classes.NameTitle}\n                >\n                    {user.name}\n                </Typography>\n                <Divider style={{marginBottom: '1rem'}} />\n                <GridList cellHeight={300} cols={3} spacing={20}>\n                    {posts.posts.length > 0 ? ([...posts.posts].reverse().map(post => (\n                        <GridListTile \n                            key={post._id} \n                            post={post} \n                            className='tileStyle'\n                            onClick={() => history.push({\n                                pathname: `/feed/post/${post._id}`,\n                                state: { post: post }\n                            })}\n                        >\n                            <img src={post.image} />\n                        </GridListTile>\n                    ))) : (\n                        <Grid container>\n                        <div\n                        style={{\n                            position: 'absolute',\n                            left: '50%',\n                            top: '50%',\n                            transform: 'translate(-50%, -50%)'\n                        }}\n                    >\n                        <img src={noposts} height=\"150px\" />\n                        <Typography\n                    component=\"h5\"\n                    variant=\"h5\"\n                    align=\"center\"\n                    noWrap\n                >\n                    No posts available\n        </Typography>\n            </div>\n            </Grid>\n            )}\n                </GridList>\n            </Container>\n            <BottomAppBar onProfileClick={() => onProfileClick(getCook('userId'))} onFeedClick={onFeedClick}/>\n        </React.Fragment>\n    );\n}\n\nProfile.propTypes = {\n    logoutUser: PropTypes.func.isRequired,\n    fetchPostsByUserId: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    posts: state.posts\n});\n\nexport default connect(\n    mapStateToProps,\n    { logoutUser, fetchPostsByUserId }\n)(Profile);\n","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Divider, CardActions, Link, Card, Hidden, CardMedia, Typography, Grid, List, ListItem, ListItemText, Button } from '@material-ui/core'\nimport { fetchCommentsByPost, addComment } from '../redux/actions/commentActions.js'\nimport moment from 'moment'\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        display: 'flex',\n        height: '75vh'\n    },\n    cardDetails: {\n        flex: 2,\n    },\n    cardMedia: {\n        flex: 3.5,\n    },\n    mainGrid: {\n        marginTop: theme.spacing(10),\n    },\n    root: {\n        width: '100%',\n    },\n    commentSection: {\n        height: '65vh',\n        overflowY: 'auto'\n    },\n    commentInput: {\n        width: '100%',\n        border: 'none',\n        outline: 'none',\n        fontSize: '13px',\n    },\n}));\n\nconst PostCard = ({ fetchCommentsByPost, addComment, comments, post, onProfileClick }) => {\n    const [comment, setComment] = React.useState(\"\");\n    const classes = useStyles();\n\n    const submit = async (e) => {\n        e.preventDefault();\n        addComment(post._id, comment).then(() => setComment(''));\n    }\n\n    React.useEffect(() => {\n        fetchCommentsByPost(post._id);\n    }, [fetchCommentsByPost]);\n\n    return (\n        <Grid className={classes.mainGrid}>\n            <Grid item sm={12} md={12}>\n                <Card className={classes.card} elevation={3}>\n                    <Hidden xsDown>\n                        <CardMedia className={classes.cardMedia} image={post.image} />\n                    </Hidden>\n                    <div className={classes.cardDetails}>\n                        <CardActions className={classes.infoSection}>\n                            <Typography component=\"subtitle1\" variant=\"subtitle1\">\n                                <Button onClick={()=>onProfileClick(post.author._id)}><b>{post.author.username}</b></Button>\n                            </Typography>\n                        </CardActions>\n                        <Divider />\n                        <div className={classes.commentSection}>\n                            <List className={classes.root}>\n                                {comments.comments.map(commentPost => {\n                                    return <ListItem>\n                                     <ListItemText\n                                        primary={\n                                            <React.Fragment>\n                                                <Typography\n                                                    component=\"span\"\n                                                    variant=\"body2\"\n                                                    className={classes.inline}\n                                                    color=\"textPrimary\"\n                                                >\n                                                    <b>{commentPost.author.username}</b> {commentPost.text}\n                                                </Typography>\n                                            </React.Fragment>\n                                        }\n                                        secondary={\n                                            <React.Fragment>\n                                                <Typography\n                                                    component=\"span\"\n                                                    variant=\"body2\"\n                                                    className={classes.inline}\n                                                    color=\"textSecondary\"\n                                                >\n                                                    {moment(`${commentPost.createdAt}`).startOf('second').fromNow()}\n                                                </Typography>\n                                            </React.Fragment>\n                                            \n                                        }\n                                    />\n                                    </ListItem>\n                                })\n                                }\n                            </List>\n                        </div>\n                        <Divider />\n                        <CardActions className={classes.inputSection}>\n                            <form onSubmit={submit} style={{ width: '100%' }}>\n                                <button\n                                    type=\"submit\"\n                                    style={{ float: 'right', fontSize: '13px' }}\n                                >Post</button>\n                                <div style={{\n                                    overflow: 'hidden',\n                                    paddingRight: '0.5em'\n                                }}>\n                                    <input type=\"text\" placeholder=\"Add a comment\" className={classes.commentInput} value={comment} onChange={e => setComment(e.target.value)} />\n                                </div>\n                            </form>\n                        </CardActions>\n                    </div>\n                </Card>\n            </Grid>\n        </Grid>\n    );\n}\n\nPostCard.propTypes = {\n    fetchCommentsByPost: PropTypes.func.isRequired,\n    addComment: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    comments: state.comments\n})\n\n\nexport default connect(\n    mapStateToProps,\n    { fetchCommentsByPost, addComment }\n)(PostCard);","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Container} from '@material-ui/core'\nimport { logoutUser } from '../redux/actions/authActions';\n\nimport TopAppBar from '../components/TopAppBar';\nimport BottomAppBar from \"../components/BottomAppBar\";\nimport PostCard from \"../components/PostCard\";\n\nconst Post = ({ logoutUser, history, location }) => {\n\n    const onLogoutClick = e => {\n        e.preventDefault();\n        logoutUser();\n    }\n\n    const backButton = e => {\n        e.preventDefault();\n        if (location.state.flag == 'feed')\n            history.push('/feed');\n        else\n            history.push('/profile')\n    }\n    const onFeedClick = () => {\n        history.push(\"/feed\")\n    }\n\n    // Courtesy of stack over flow :D\n    const getCook = (cookiename) => {\n        // Get name followed by anything except a semicolon\n        let cookiestring = RegExp(\"\" + cookiename + \"[^;]+\").exec(document.cookie);\n        // Return everything after the equal sign, or an empty string if the cookie name not found\n        return decodeURIComponent(!!cookiestring ? cookiestring.toString().replace(/^[^=]+./, \"\") : \"\");\n    }\n\n    const onProfileClick = (userId) => {\n        history.push(`/profile/${userId}`);\n    }\n    console.log('location.state', location.state);\n    return (\n        <React.Fragment>\n            <TopAppBar onLogoutClick={onLogoutClick} backButton={backButton} />\n            <Container maxWidth=\"md\">\n                <main>\n                    <PostCard post={location.state.post} onProfileClick={onProfileClick}/>\n                </main>\n            </Container>\n            <BottomAppBar onProfileClick={() => onProfileClick(getCook('userId'))} onFeedClick={onFeedClick}/>\n        </React.Fragment>\n    );\n}\n\nPost.propTypes = {\n    logoutUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n    auth: state.auth\n});\nexport default connect(\n    mapStateToProps,\n    { logoutUser }\n)(Post);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Switch, Route } from \"react-router-dom\";\nimport Login from './pages/Login';\nimport SignUp from './pages/SignUp';\nimport setAuthToken from './utils/setAuthToken';\nimport {setCurrentUser} from './redux/actions/authActions';\nimport PrivateRoute from './PrivateRoute';\nimport Feed from './pages/Feed';\nimport Profile from './pages/Profile'\nimport Post from './pages/Post';\n\n\nimport axios from \"axios\";\nimport {\n    GET_ERRORS as GET_ERRORS_FEED,\n    FETCH_POSTS_SUCCESS,\n    //FETCH_USER_POSTS_SUCCESS,\n    //POST_UPLOAD_SUCCESS\n} from \"./redux/actions/types\";\nimport {\n    FETCH_COMMENTS_SUCCESS,\n    //ADD_COMMENT,\n    GET_ERRORS as GET_ERRORS_COMMENT\n} from './redux/actions/types';\n\n\n\nconst App = ({ dispatch }) => {\n\n  // const webSocket = new WebSocket('ws://' + window.location.host.split(':')[0] + (window.location.port && `:${window.location.port}`) + '/websocket');\n  const webSocket = new WebSocket('ws://localhost:4000/websocket');\n\n  webSocket.onmessage = (message) => {\n    const messageObject = JSON.parse(message.data);\n    switch(messageObject.type) {\n      case 'UPDATE_FEED':\n        // TODO : REFACTOR\n        // TODO: UPDATE FEED... make an axios request or something\n        console.log('UPDATE POSTERS');\n        axios\n          .get('/basicgrams')\n          .then(res => {\n              console.log('successfully fetched posts', res.data);\n              dispatch({\n                  type: FETCH_POSTS_SUCCESS,\n                  payload: res.data.basicgrams,\n              })\n          })\n          .catch(err => {\n              console.log(err);\n              dispatch({\n                  type: GET_ERRORS_FEED,\n                  payload: err.response.data\n              })\n          });\n          break;\n      case 'UPDATE_COMMENT':\n        // TODO: UPDATE COMMENT... make an axios request or something\n        console.log('UPDATE COMMENT', messageObject.postId);\n        axios\n        .get(`/basicgrams/comment/post/${messageObject.postId}`)\n        .then(res => {\n          console.log(res.data)\n            dispatch({\n                type: FETCH_COMMENTS_SUCCESS,\n                payload: res.data.comments,\n            });\n        })\n        .catch(err => {\n            dispatch({\n                type: GET_ERRORS_COMMENT,\n                payload: err.response.data\n            })\n        });\n\n        break;\n      default:\n        console.log('Unexpected message.');\n    }\n  };\n  \n  webSocket.onerror = e => {\n    console.log(e);\n  }\n\n\n  if (localStorage.token){\n    const token = localStorage.token;\n    setAuthToken(token);\n    dispatch(setCurrentUser(token))\n  }\n\n  return (\n    <div>\n      <Switch>\n        <Route exact path=\"/\" component={Login} /> \n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/signup\" component={SignUp} />\n        <PrivateRoute exact path=\"/feed\" component={Feed} />\n        <PrivateRoute path=\"/profile\" component={Profile} />\n        <PrivateRoute path=\"/feed/post\" component={Post} />\n      </Switch>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    // messages: state.messageReducer.messages,\n    // text: state.messageReducer.text,\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n    FETCH_POSTS_SUCCESS,\n    FETCH_USER_POSTS_SUCCESS,\n    POST_UPLOAD_SUCCESS\n} from \"../actions/types\";\n\nconst initialState = {\n    posts: [],\n    newPost: {}\n};\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case FETCH_POSTS_SUCCESS:\n            return {\n                ...state,\n                posts: action.payload\n            };\n        case FETCH_USER_POSTS_SUCCESS:\n            return {\n                ...state,\n                posts: action.payload\n            };\n            case POST_UPLOAD_SUCCESS:\n                return {\n                    ...state,\n                    newPost: action.payload\n                };\n        default:\n            return state;\n    }\n}","import {\n    FETCH_COMMENTS_SUCCESS,\n    ADD_COMMENT\n} from \"../actions/types\";\n\nconst initialState = {\n    comments: [],\n};\n\nexport default function(state = initialState, action) {\n\n    switch (action.type) {\n        case FETCH_COMMENTS_SUCCESS:\n            return {\n                ...state,\n                comments: action.payload\n            };\n        case ADD_COMMENT:\n            return {\n                ...state,\n            };\n        default:\n            return state;\n    }\n}","import {\n    SET_CURRENT_USER,\n    USER_LOADING\n  } from \"../actions/types\";\n  const isEmpty = require(\"is-empty\");\n  const initialState = {\n    isAuthenticated: false,\n    user: {},\n    loading: false\n  };\n  export default function(state = initialState, action) {\n    switch (action.type) {\n      case SET_CURRENT_USER:\n        return {\n          ...state,\n          isAuthenticated: !isEmpty(action.payload),\n          user: action.payload\n        };\n      case USER_LOADING:\n        return {\n          ...state,\n          loading: true\n        };\n      default:\n        return state;\n    }\n  } ","import { GET_ERRORS } from \"../actions/types\";\nconst initialState = {};\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n    default:\n      return state;\n  }\n} ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport postReducer from './redux/reducers/postReducer'\nimport commentReducer from './redux/reducers/commentReducer'\nimport authReducer from './redux/reducers/authReducer';\nimport errorReducer from './redux/reducers/errorReducer';\n\nconst rootReducer = combineReducers({\n  posts: postReducer,\n  auth: authReducer,\n  errors: errorReducer,\n  comment: commentReducer,\n  comments: commentReducer,\n});\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\n// export const getAllPosts = (state) => {\n//   return postReducer.getAllPosts(state.posts);\n// };\n\n// export const getPostById = (state, id) => {\n//   return postReducer.getPostById(state.posts, id);\n// };\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n    <App />\n    </Router>\n  </Provider>\n  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/noposts.558fc787.svg\";"],"sourceRoot":""}